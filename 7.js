console.log("Завдання: 7 ==============================");

// Створюємо функцію task7, яка використовує setInterval та проміси.
function task7() {
  // Створюємо новий проміс
  const promise = new Promise((resolve, reject) => {
    // Використовуємо функцію setInterval, щоб виконати функцію кожну секунду
    const intervalId = setInterval(() => {
      // Отримаємо поточну дату та час
      const currentDate = new Date();
      // Отримуємо секунди з поточної дати
      const seconds = currentDate.getSeconds();
      // Виводимо в консоль повідомлення про поточні секунди
      console.log(`Поточні секунди: ${seconds}`);

      if (seconds % 10 === 0) {
        // Якщо поточні секунди кратні 10, очищуємо інтервал та резолвимо проміс з рядком "Поточні секунди кратні 10!"
        clearInterval(intervalId);
        resolve("Поточні секунди кратні 10!");
      } else if (seconds % 3 === 0) {
        // Якщо поточні секунди кратні 3, очищуємо інтервал та відхиляємо проміс з рядком "Поточні секунди кратні 3!"
        clearInterval(intervalId);
        reject("Поточні секунди кратні 3!");
      }
    }, 1000);
  });

  // Використовуємо then для обробки зарезолвленого проміса
  promise
    .then((value) => {
      console.log(`Проміс зарезолвився з значенням: ${value}`);
    })
    // Якщо проміс відхилено, обробляємо помилку за допомогою catch
    .catch((error) => {
      console.log(`Проміс відхилився з помилкою: ${error}`);
    })
    // Використовуємо finally для виконання дій після завершення проміса, незалежно від його статусу
    .finally(() => {
      console.log("Проміс завершено");
    });
}

// Викликаємо функцію task7
task7();
